// Code generated by protoc-gen-go. DO NOT EDIT.
// source: renderer.proto

package renderer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RenderRequest struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Width                int32    `protobuf:"varint,2,opt,name=width" json:"width,omitempty"`
	Height               int32    `protobuf:"varint,3,opt,name=height" json:"height,omitempty"`
	Timeout              int32    `protobuf:"varint,4,opt,name=timeout" json:"timeout,omitempty"`
	Timezone             string   `protobuf:"bytes,5,opt,name=timezone" json:"timezone,omitempty"`
	Encoding             string   `protobuf:"bytes,6,opt,name=encoding" json:"encoding,omitempty"`
	FilePath             string   `protobuf:"bytes,7,opt,name=filePath" json:"filePath,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RenderRequest) Reset()         { *m = RenderRequest{} }
func (m *RenderRequest) String() string { return proto.CompactTextString(m) }
func (*RenderRequest) ProtoMessage()    {}
func (*RenderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_renderer_7d0e4a4145f19ed3, []int{0}
}
func (m *RenderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenderRequest.Unmarshal(m, b)
}
func (m *RenderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenderRequest.Marshal(b, m, deterministic)
}
func (dst *RenderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenderRequest.Merge(dst, src)
}
func (m *RenderRequest) XXX_Size() int {
	return xxx_messageInfo_RenderRequest.Size(m)
}
func (m *RenderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RenderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RenderRequest proto.InternalMessageInfo

func (m *RenderRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *RenderRequest) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *RenderRequest) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *RenderRequest) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *RenderRequest) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func (m *RenderRequest) GetEncoding() string {
	if m != nil {
		return m.Encoding
	}
	return ""
}

func (m *RenderRequest) GetFilePath() string {
	if m != nil {
		return m.FilePath
	}
	return ""
}

type RenderResponse struct {
	Error                string   `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RenderResponse) Reset()         { *m = RenderResponse{} }
func (m *RenderResponse) String() string { return proto.CompactTextString(m) }
func (*RenderResponse) ProtoMessage()    {}
func (*RenderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_renderer_7d0e4a4145f19ed3, []int{1}
}
func (m *RenderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenderResponse.Unmarshal(m, b)
}
func (m *RenderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenderResponse.Marshal(b, m, deterministic)
}
func (dst *RenderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenderResponse.Merge(dst, src)
}
func (m *RenderResponse) XXX_Size() int {
	return xxx_messageInfo_RenderResponse.Size(m)
}
func (m *RenderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RenderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RenderResponse proto.InternalMessageInfo

func (m *RenderResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*RenderRequest)(nil), "models.RenderRequest")
	proto.RegisterType((*RenderResponse)(nil), "models.RenderResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RendererClient is the client API for Renderer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RendererClient interface {
	Render(ctx context.Context, in *RenderRequest, opts ...grpc.CallOption) (*RenderResponse, error)
}

type rendererClient struct {
	cc *grpc.ClientConn
}

func NewRendererClient(cc *grpc.ClientConn) RendererClient {
	return &rendererClient{cc}
}

func (c *rendererClient) Render(ctx context.Context, in *RenderRequest, opts ...grpc.CallOption) (*RenderResponse, error) {
	out := new(RenderResponse)
	err := c.cc.Invoke(ctx, "/models.Renderer/Render", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Renderer service

type RendererServer interface {
	Render(context.Context, *RenderRequest) (*RenderResponse, error)
}

func RegisterRendererServer(s *grpc.Server, srv RendererServer) {
	s.RegisterService(&_Renderer_serviceDesc, srv)
}

func _Renderer_Render_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RendererServer).Render(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/models.Renderer/Render",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RendererServer).Render(ctx, req.(*RenderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Renderer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "models.Renderer",
	HandlerType: (*RendererServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Render",
			Handler:    _Renderer_Render_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "renderer.proto",
}

func init() { proto.RegisterFile("renderer.proto", fileDescriptor_renderer_7d0e4a4145f19ed3) }

var fileDescriptor_renderer_7d0e4a4145f19ed3 = []byte{
	// 230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0x59, 0xeb, 0xa6, 0xeb, 0x80, 0x45, 0x82, 0x96, 0xa1, 0xa7, 0xd2, 0x83, 0xf4, 0xb4,
	0x07, 0x3d, 0x78, 0xd7, 0x17, 0x90, 0x1c, 0xbd, 0xa9, 0x3b, 0x76, 0x03, 0xdb, 0xcc, 0x3a, 0xc9,
	0x22, 0xf8, 0x6e, 0xbe, 0x9b, 0x24, 0xd9, 0x08, 0xf6, 0xf6, 0x7f, 0xf3, 0xc1, 0x30, 0xf3, 0xc3,
	0x4a, 0xc8, 0x75, 0x24, 0x24, 0xed, 0x28, 0x1c, 0x58, 0xab, 0x23, 0x77, 0x34, 0xf8, 0xdd, 0x4f,
	0x05, 0x97, 0x26, 0x29, 0x43, 0x9f, 0x13, 0xf9, 0xa0, 0xaf, 0x60, 0x31, 0xc9, 0x80, 0xd5, 0xb6,
	0xda, 0x5f, 0x98, 0x18, 0xf5, 0x35, 0xd4, 0x5f, 0xb6, 0x0b, 0x3d, 0x9e, 0x6d, 0xab, 0x7d, 0x6d,
	0x32, 0xe8, 0x35, 0xa8, 0x9e, 0xec, 0xa1, 0x0f, 0xb8, 0x48, 0xe3, 0x99, 0x34, 0xc2, 0x32, 0xd8,
	0x23, 0xf1, 0x14, 0xf0, 0x3c, 0x89, 0x82, 0x7a, 0x03, 0x4d, 0x8c, 0xdf, 0xec, 0x08, 0xeb, 0xb4,
	0xfe, 0x8f, 0xa3, 0x23, 0xf7, 0xce, 0x9d, 0x75, 0x07, 0x54, 0xd9, 0x15, 0x8e, 0xee, 0xc3, 0x0e,
	0xf4, 0xfc, 0x1a, 0x7a, 0x5c, 0x66, 0x57, 0x78, 0x77, 0x0b, 0xab, 0x72, 0xbe, 0x1f, 0xd9, 0x79,
	0x8a, 0xd7, 0x92, 0x08, 0xcb, 0xfc, 0x41, 0x86, 0xbb, 0x27, 0x68, 0xcc, 0xdc, 0x80, 0x7e, 0x00,
	0x95, 0xb3, 0xbe, 0x69, 0x73, 0x0d, 0xed, 0xbf, 0x0a, 0x36, 0xeb, 0xd3, 0x71, 0x5e, 0xfd, 0x08,
	0x2f, 0x4d, 0xa9, 0xf1, 0x4d, 0xa5, 0x1e, 0xef, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xeb, 0x17,
	0xba, 0xa9, 0x59, 0x01, 0x00, 0x00,
}
